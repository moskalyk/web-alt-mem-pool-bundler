/* eslint-disable */
// @ts-nocheck
/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.12.2
 *
 */
import type { IFluenceClient as IFluenceClient$$, CallParams as CallParams$$ } from '@fluencelabs/js-client';
import {
    v5_callFunction as callFunction$$,
    v5_registerService as registerService$$,
} from '@fluencelabs/js-client';
    


// Services

// Functions
export const getPeers_script = `
                    (seq
                     (seq
                      (seq
                       (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                       (xor
                        (seq
                         (seq
                          (seq
                           (seq
                            (new $option-inline
                             (seq
                              (seq
                               (seq
                                (new $array-inline
                                 (seq
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (seq
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "spellId" "274cf5b0-c244-4777-a5f1-a4658019156b" "workerId" "12D3KooWHXZoS1CRQihNU7zoBQtCkZoysHVW4ZGNRcvXJZdiTjAs"] SpellLocation_obj)
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWBCAWAGNMfqaBG1kUv49dkK8wSNeiTfGubLLjGQaFBf6z" "spellId" "364fabd1-47aa-4eb8-b266-16a278c82a4d" "workerId" "12D3KooWQGU6LLHEaXPAHygopNwSctbNGtiG8UhqWuPSmu4AJBV9"] SpellLocation_obj-0)
                                      )
                                      (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWEqbHHE1bzk1nJ8LE2Wbm2UaycYjRsSB4CTxDS342Boip" "spellId" "fd572d5a-70ff-411b-9a4c-9cede08db361" "workerId" "12D3KooWRHzLGQ9FxitVpt6RtYrxM8XfTci2yuNWAKEYbZbzxSqc"] SpellLocation_obj-1)
                                     )
                                     (ap SpellLocation_obj $array-inline)
                                    )
                                    (ap SpellLocation_obj-0 $array-inline)
                                   )
                                   (ap SpellLocation_obj-1 $array-inline)
                                  )
                                  (canon %init_peer_id% $array-inline  #array-inline-0)
                                 )
                                )
                                (call %init_peer_id% ("json" "obj") ["definition" "bafkreicmunaohvcik2z7unysh2pcdhmt7gofvwecwkfoqvtvw3qn7mkdxa" "dummyDealId" "defaultWorker_12D3KooWLbTpQHXCSHiULa6NZC3WCzEehY3PwNmAvjc2X2mPrdiF_0731451842952413" "installationSpells" #array-inline-0 "relayId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "timestamp" "2023-10-25T22:15:41.362Z"] Host_obj)
                               )
                               (xor
                                (ap Host_obj $option-inline)
                                (null)
                               )
                              )
                              (canon %init_peer_id% $option-inline  #option-inline-0)
                             )
                            )
                            (call %init_peer_id% ("json" "obj") ["defaultWorker" #option-inline-0] Hosts_obj)
                           )
                           (ap Hosts_obj.$.defaultWorker Hosts_obj_flat)
                          )
                          (ap Hosts_obj_flat.$.[0].installationSpells Hosts_obj_flat_flat)
                         )
                         (fold Hosts_obj_flat_flat w-0
                          (seq
                           (xor
                            (seq
                             (seq
                              (seq
                               (seq
                                (seq
                                 (new $-ephemeral-stream-
                                  (new #-ephemeral-canon-
                                   (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                  )
                                 )
                                 (new $-ephemeral-stream-
                                  (new #-ephemeral-canon-
                                   (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                  )
                                 )
                                )
                                (call w-0.$.workerId ("myService" "get_peers") [] ret)
                               )
                               (ap ret $results)
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (new $-ephemeral-stream-
                              (new #-ephemeral-canon-
                               (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                              )
                             )
                            )
                            (seq
                             (seq
                              (seq
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon %init_peer_id% $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (fail %last_error%)
                            )
                           )
                           (next w-0)
                          )
                         )
                        )
                        (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 0])
                       )
                      )
                      (canon %init_peer_id% $results  #results_canon)
                     )
                     (call %init_peer_id% ("callbackSrv" "response") [#results_canon])
                    )
    `
 

export function getPeers(
    config?: {ttl?: number}
): Promise<string[][]>;

export function getPeers(
    peer: IFluenceClient$$,
    config?: {ttl?: number}
): Promise<string[][]>;

export function getPeers(...args: any) {


    return callFunction$$(
        args,
        {
    "functionName" : "getPeers",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "array",
                    "type" : {
                        "tag" : "array",
                        "type" : {
                            "tag" : "scalar",
                            "name" : "string"
                        }
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        getPeers_script
    )
}

export const greeting_script = `
                    (seq
                     (seq
                      (seq
                       (seq
                        (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                        (call %init_peer_id% ("getDataSrv" "name") [] -name-arg-)
                       )
                       (xor
                        (seq
                         (seq
                          (seq
                           (seq
                            (new $option-inline
                             (seq
                              (seq
                               (seq
                                (new $array-inline
                                 (seq
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (seq
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "spellId" "274cf5b0-c244-4777-a5f1-a4658019156b" "workerId" "12D3KooWHXZoS1CRQihNU7zoBQtCkZoysHVW4ZGNRcvXJZdiTjAs"] SpellLocation_obj)
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWBCAWAGNMfqaBG1kUv49dkK8wSNeiTfGubLLjGQaFBf6z" "spellId" "364fabd1-47aa-4eb8-b266-16a278c82a4d" "workerId" "12D3KooWQGU6LLHEaXPAHygopNwSctbNGtiG8UhqWuPSmu4AJBV9"] SpellLocation_obj-0)
                                      )
                                      (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWEqbHHE1bzk1nJ8LE2Wbm2UaycYjRsSB4CTxDS342Boip" "spellId" "fd572d5a-70ff-411b-9a4c-9cede08db361" "workerId" "12D3KooWRHzLGQ9FxitVpt6RtYrxM8XfTci2yuNWAKEYbZbzxSqc"] SpellLocation_obj-1)
                                     )
                                     (ap SpellLocation_obj $array-inline)
                                    )
                                    (ap SpellLocation_obj-0 $array-inline)
                                   )
                                   (ap SpellLocation_obj-1 $array-inline)
                                  )
                                  (canon %init_peer_id% $array-inline  #array-inline-0)
                                 )
                                )
                                (call %init_peer_id% ("json" "obj") ["definition" "bafkreicmunaohvcik2z7unysh2pcdhmt7gofvwecwkfoqvtvw3qn7mkdxa" "dummyDealId" "defaultWorker_12D3KooWLbTpQHXCSHiULa6NZC3WCzEehY3PwNmAvjc2X2mPrdiF_0731451842952413" "installationSpells" #array-inline-0 "relayId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "timestamp" "2023-10-25T22:15:41.362Z"] Host_obj)
                               )
                               (xor
                                (ap Host_obj $option-inline)
                                (null)
                               )
                              )
                              (canon %init_peer_id% $option-inline  #option-inline-0)
                             )
                            )
                            (call %init_peer_id% ("json" "obj") ["defaultWorker" #option-inline-0] Hosts_obj)
                           )
                           (ap Hosts_obj.$.defaultWorker Hosts_obj_flat)
                          )
                          (ap Hosts_obj_flat.$.[0].installationSpells Hosts_obj_flat_flat)
                         )
                         (fold Hosts_obj_flat_flat w-0
                          (seq
                           (xor
                            (seq
                             (seq
                              (seq
                               (seq
                                (seq
                                 (new $-ephemeral-stream-
                                  (new #-ephemeral-canon-
                                   (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                  )
                                 )
                                 (new $-ephemeral-stream-
                                  (new #-ephemeral-canon-
                                   (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                  )
                                 )
                                )
                                (call w-0.$.workerId ("myService" "add_peer") [-name-arg-] ret)
                               )
                               (ap ret $results)
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (new $-ephemeral-stream-
                              (new #-ephemeral-canon-
                               (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                              )
                             )
                            )
                            (seq
                             (seq
                              (seq
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon %init_peer_id% $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (fail %last_error%)
                            )
                           )
                           (next w-0)
                          )
                         )
                        )
                        (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 0])
                       )
                      )
                      (canon %init_peer_id% $results  #results_canon)
                     )
                     (call %init_peer_id% ("callbackSrv" "response") [#results_canon])
                    )
    `
 

export function greeting(
    name: string,
    config?: {ttl?: number}
): Promise<string[]>;

export function greeting(
    peer: IFluenceClient$$,
    name: string,
    config?: {ttl?: number}
): Promise<string[]>;

export function greeting(...args: any) {


    return callFunction$$(
        args,
        {
    "functionName" : "greeting",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                "name" : {
                    "tag" : "scalar",
                    "name" : "string"
                }
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "array",
                    "type" : {
                        "tag" : "scalar",
                        "name" : "string"
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        greeting_script
    )
}

export const deletePeer_script = `
                    (seq
                     (seq
                      (seq
                       (seq
                        (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                        (call %init_peer_id% ("getDataSrv" "peer_id") [] -peer_id-arg-)
                       )
                       (xor
                        (seq
                         (seq
                          (seq
                           (seq
                            (new $option-inline
                             (seq
                              (seq
                               (seq
                                (new $array-inline
                                 (seq
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (seq
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "spellId" "274cf5b0-c244-4777-a5f1-a4658019156b" "workerId" "12D3KooWHXZoS1CRQihNU7zoBQtCkZoysHVW4ZGNRcvXJZdiTjAs"] SpellLocation_obj)
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWBCAWAGNMfqaBG1kUv49dkK8wSNeiTfGubLLjGQaFBf6z" "spellId" "364fabd1-47aa-4eb8-b266-16a278c82a4d" "workerId" "12D3KooWQGU6LLHEaXPAHygopNwSctbNGtiG8UhqWuPSmu4AJBV9"] SpellLocation_obj-0)
                                      )
                                      (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWEqbHHE1bzk1nJ8LE2Wbm2UaycYjRsSB4CTxDS342Boip" "spellId" "fd572d5a-70ff-411b-9a4c-9cede08db361" "workerId" "12D3KooWRHzLGQ9FxitVpt6RtYrxM8XfTci2yuNWAKEYbZbzxSqc"] SpellLocation_obj-1)
                                     )
                                     (ap SpellLocation_obj $array-inline)
                                    )
                                    (ap SpellLocation_obj-0 $array-inline)
                                   )
                                   (ap SpellLocation_obj-1 $array-inline)
                                  )
                                  (canon %init_peer_id% $array-inline  #array-inline-0)
                                 )
                                )
                                (call %init_peer_id% ("json" "obj") ["definition" "bafkreicmunaohvcik2z7unysh2pcdhmt7gofvwecwkfoqvtvw3qn7mkdxa" "dummyDealId" "defaultWorker_12D3KooWLbTpQHXCSHiULa6NZC3WCzEehY3PwNmAvjc2X2mPrdiF_0731451842952413" "installationSpells" #array-inline-0 "relayId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "timestamp" "2023-10-25T22:15:41.362Z"] Host_obj)
                               )
                               (xor
                                (ap Host_obj $option-inline)
                                (null)
                               )
                              )
                              (canon %init_peer_id% $option-inline  #option-inline-0)
                             )
                            )
                            (call %init_peer_id% ("json" "obj") ["defaultWorker" #option-inline-0] Hosts_obj)
                           )
                           (ap Hosts_obj.$.defaultWorker Hosts_obj_flat)
                          )
                          (ap Hosts_obj_flat.$.[0].installationSpells Hosts_obj_flat_flat)
                         )
                         (fold Hosts_obj_flat_flat w-0
                          (seq
                           (xor
                            (seq
                             (seq
                              (seq
                               (seq
                                (seq
                                 (seq
                                  (new $-ephemeral-stream-
                                   (new #-ephemeral-canon-
                                    (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                   )
                                  )
                                  (new $-ephemeral-stream-
                                   (new #-ephemeral-canon-
                                    (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                   )
                                  )
                                 )
                                 (call w-0.$.workerId ("myService" "remove_peer") [-peer_id-arg-] ret)
                                )
                                (call w-0.$.workerId ("run-console" "print") [ret])
                               )
                               (ap true $results)
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (new $-ephemeral-stream-
                              (new #-ephemeral-canon-
                               (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                              )
                             )
                            )
                            (seq
                             (seq
                              (seq
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon %init_peer_id% $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (fail %last_error%)
                            )
                           )
                           (next w-0)
                          )
                         )
                        )
                        (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 0])
                       )
                      )
                      (canon %init_peer_id% $results  #results_canon)
                     )
                     (call %init_peer_id% ("callbackSrv" "response") [#results_canon])
                    )
    `
 

export function deletePeer(
    peer_id: string,
    config?: {ttl?: number}
): Promise<boolean[]>;

export function deletePeer(
    peer: IFluenceClient$$,
    peer_id: string,
    config?: {ttl?: number}
): Promise<boolean[]>;

export function deletePeer(...args: any) {


    return callFunction$$(
        args,
        {
    "functionName" : "deletePeer",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                "peer_id" : {
                    "tag" : "scalar",
                    "name" : "string"
                }
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "array",
                    "type" : {
                        "tag" : "scalar",
                        "name" : "bool"
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        deletePeer_script
    )
}

export const clearPeers_script = `
                    (seq
                     (seq
                      (seq
                       (call %init_peer_id% ("getDataSrv" "-relay-") [] -relay-)
                       (xor
                        (seq
                         (seq
                          (seq
                           (seq
                            (new $option-inline
                             (seq
                              (seq
                               (seq
                                (new $array-inline
                                 (seq
                                  (seq
                                   (seq
                                    (seq
                                     (seq
                                      (seq
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "spellId" "274cf5b0-c244-4777-a5f1-a4658019156b" "workerId" "12D3KooWHXZoS1CRQihNU7zoBQtCkZoysHVW4ZGNRcvXJZdiTjAs"] SpellLocation_obj)
                                       (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWBCAWAGNMfqaBG1kUv49dkK8wSNeiTfGubLLjGQaFBf6z" "spellId" "364fabd1-47aa-4eb8-b266-16a278c82a4d" "workerId" "12D3KooWQGU6LLHEaXPAHygopNwSctbNGtiG8UhqWuPSmu4AJBV9"] SpellLocation_obj-0)
                                      )
                                      (call %init_peer_id% ("json" "obj") ["hostId" "12D3KooWEqbHHE1bzk1nJ8LE2Wbm2UaycYjRsSB4CTxDS342Boip" "spellId" "fd572d5a-70ff-411b-9a4c-9cede08db361" "workerId" "12D3KooWRHzLGQ9FxitVpt6RtYrxM8XfTci2yuNWAKEYbZbzxSqc"] SpellLocation_obj-1)
                                     )
                                     (ap SpellLocation_obj $array-inline)
                                    )
                                    (ap SpellLocation_obj-0 $array-inline)
                                   )
                                   (ap SpellLocation_obj-1 $array-inline)
                                  )
                                  (canon %init_peer_id% $array-inline  #array-inline-0)
                                 )
                                )
                                (call %init_peer_id% ("json" "obj") ["definition" "bafkreicmunaohvcik2z7unysh2pcdhmt7gofvwecwkfoqvtvw3qn7mkdxa" "dummyDealId" "defaultWorker_12D3KooWLbTpQHXCSHiULa6NZC3WCzEehY3PwNmAvjc2X2mPrdiF_0731451842952413" "installationSpells" #array-inline-0 "relayId" "12D3KooWFbasz6SnGxhPq3KWn8KgNW4asNKskxR5JizMdszM4KCN" "timestamp" "2023-10-25T22:15:41.362Z"] Host_obj)
                               )
                               (xor
                                (ap Host_obj $option-inline)
                                (null)
                               )
                              )
                              (canon %init_peer_id% $option-inline  #option-inline-0)
                             )
                            )
                            (call %init_peer_id% ("json" "obj") ["defaultWorker" #option-inline-0] Hosts_obj)
                           )
                           (ap Hosts_obj.$.defaultWorker Hosts_obj_flat)
                          )
                          (ap Hosts_obj_flat.$.[0].installationSpells Hosts_obj_flat_flat)
                         )
                         (fold Hosts_obj_flat_flat w-0
                          (seq
                           (xor
                            (seq
                             (seq
                              (seq
                               (seq
                                (seq
                                 (seq
                                  (new $-ephemeral-stream-
                                   (new #-ephemeral-canon-
                                    (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                   )
                                  )
                                  (new $-ephemeral-stream-
                                   (new #-ephemeral-canon-
                                    (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                   )
                                  )
                                 )
                                 (call w-0.$.workerId ("myService" "clear") [] ret)
                                )
                                (call w-0.$.workerId ("run-console" "print") [ret])
                               )
                               (ap true $results)
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (new $-ephemeral-stream-
                              (new #-ephemeral-canon-
                               (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                              )
                             )
                            )
                            (seq
                             (seq
                              (seq
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon w-0.$.hostId $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                               (new $-ephemeral-stream-
                                (new #-ephemeral-canon-
                                 (canon -relay- $-ephemeral-stream-  #-ephemeral-canon-)
                                )
                               )
                              )
                              (new $-ephemeral-stream-
                               (new #-ephemeral-canon-
                                (canon %init_peer_id% $-ephemeral-stream-  #-ephemeral-canon-)
                               )
                              )
                             )
                             (fail %last_error%)
                            )
                           )
                           (next w-0)
                          )
                         )
                        )
                        (call %init_peer_id% ("errorHandlingSrv" "error") [%last_error% 0])
                       )
                      )
                      (canon %init_peer_id% $results  #results_canon)
                     )
                     (call %init_peer_id% ("callbackSrv" "response") [#results_canon])
                    )
    `
 

export function clearPeers(
    config?: {ttl?: number}
): Promise<boolean[]>;

export function clearPeers(
    peer: IFluenceClient$$,
    config?: {ttl?: number}
): Promise<boolean[]>;

export function clearPeers(...args: any) {


    return callFunction$$(
        args,
        {
    "functionName" : "clearPeers",
    "arrow" : {
        "tag" : "arrow",
        "domain" : {
            "tag" : "labeledProduct",
            "fields" : {
                
            }
        },
        "codomain" : {
            "tag" : "unlabeledProduct",
            "items" : [
                {
                    "tag" : "array",
                    "type" : {
                        "tag" : "scalar",
                        "name" : "bool"
                    }
                }
            ]
        }
    },
    "names" : {
        "relay" : "-relay-",
        "getDataSrv" : "getDataSrv",
        "callbackSrv" : "callbackSrv",
        "responseSrv" : "callbackSrv",
        "responseFnName" : "response",
        "errorHandlingSrv" : "errorHandlingSrv",
        "errorFnName" : "error"
    }
},
        clearPeers_script
    )
}

/* eslint-enable */